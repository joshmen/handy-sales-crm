name: 🧪 Tests & Quality Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v3

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📚 Cache de dependencias
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Instalar dependencias
        run: npm ci

      - name: 🔍 Ejecutar ESLint
        id: lint
        run: npm run lint || true
        continue-on-error: true

      - name: 🎨 Verificar formato de código
        run: npx prettier --check "src/**/*.{js,jsx,ts,tsx,css,md,json}"
        continue-on-error: true

      - name: 🔒 Type Check con TypeScript
        run: npm run type-check
        continue-on-error: true

      - name: 🧪 Ejecutar tests
        run: npm test -- --passWithNoTests
        continue-on-error: true

      - name: 🏗️ Verificar build
        run: npm run build
        env:
          NEXTAUTH_SECRET: test-secret-for-build-only
          NEXTAUTH_URL: http://localhost:3000

      - name: 📊 Reporte de calidad
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const status = {
              lint: '${{ steps.lint.outcome }}' === 'success' ? '✅' : '⚠️',
              format: '${{ steps.format.outcome }}' === 'success' ? '✅' : '⚠️',
              typecheck: '${{ steps.typecheck.outcome }}' === 'success' ? '✅' : '⚠️',
              test: '${{ steps.test.outcome }}' === 'success' ? '✅' : '⚠️',
              build: '${{ steps.build.outcome }}' === 'success' ? '✅' : '❌'
            };
            
            console.log('### 📊 Reporte de Calidad\n');
            console.log(`- ${status.lint} Linting`);
            console.log(`- ${status.format} Formato`);
            console.log(`- ${status.typecheck} TypeScript`);
            console.log(`- ${status.test} Tests`);
            console.log(`- ${status.build} Build`);
