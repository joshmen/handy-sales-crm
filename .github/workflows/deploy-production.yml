name: 🚀 Deploy to Vercel - Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v3

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔧 Instalar Vercel CLI
        run: npm install --global vercel@latest

      - name: 🔑 Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🏗️ Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy Project Artifacts to Vercel
        run: |
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "DEPLOYMENT_URL=$(cat deployment-url.txt)" >> $GITHUB_ENV

      - name: ✅ Comentar URL de despliegue en el commit
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = process.env.DEPLOYMENT_URL;
            const commitSha = context.sha.substring(0, 7);
            
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `### ✅ Desplegado exitosamente en Vercel!\n\n🔗 **URL de Producción:** ${deploymentUrl}\n📦 **Commit:** \`${commitSha}\`\n🚀 **Rama:** \`main\`\n⏱️ **Desplegado:** ${new Date().toLocaleString('es-MX')}`
            });

      - name: 📊 Notificar estado del despliegue
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = '${{ job.status }}';
            const statusEmoji = status === 'success' ? '✅' : '❌';
            const statusText = status === 'success' ? 'exitoso' : 'fallido';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status === 'success' ? 'success' : 'failure',
              description: `Despliegue ${statusText} en Vercel`,
              context: 'Vercel Deployment'
            });
