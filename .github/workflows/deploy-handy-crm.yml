name: 🚀 HandyCRM CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # ============================================
  # 1️⃣ QUALITY CHECKS
  # ============================================
  quality-check:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: 🔧 Run ESLint
        run: npm run lint
        continue-on-error: true
        
      - name: 🎯 TypeScript Check
        run: npm run type-check
        continue-on-error: true

  # ============================================
  # 2️⃣ BUILD & TEST
  # ============================================
  build-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: 🧪 Run tests
        run: npm test -- --passWithNoTests
        continue-on-error: true
        
      - name: 🔑 Setup environment variables
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_API_URL=${{ secrets.API_URL || 'https://api.example.com' }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET || 'development-secret' }}
          NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL || 'https://handy-sales-crm.vercel.app' }}
          CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
          EOF
          
      - name: 🏗️ Build Application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            public/
            package.json
            next.config.js
            vercel.json

  # ============================================
  # 3️⃣ DEPLOY TO PREVIEW (PR & Develop)
  # ============================================
  deploy-preview:
    name: 🔮 Deploy Preview
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 🔧 Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: 🚀 Deploy to Vercel Preview
        id: deploy
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "✅ Preview deployed to: $url"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          
      - name: 💬 Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            const comment = `### 🚀 Preview Deployment Ready!
            
            **Preview URL:** ${url}
            
            | Check | Status |
            |-------|--------|
            | 🏗️ Build | ✅ Success |
            | 🔗 Preview | ✅ Ready |
            | 🕐 Time | ${new Date().toISOString()} |
            
            ---
            💡 This preview will be updated automatically on new commits.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # ============================================
  # 4️⃣ DEPLOY TO PRODUCTION (Main branch)
  # ============================================
  deploy-production:
    name: 🚀 Deploy Production
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://handy-sales-crm.vercel.app
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 🔧 Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: 🚀 Deploy to Vercel Production
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          echo "✅ Production deployment successful!"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          
      - name: 📊 Create deployment record
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              auto_merge: false,
              required_contexts: [],
              production_environment: true,
              description: 'Production deployment to Vercel'
            });

  # ============================================
  # 5️⃣ POST-DEPLOYMENT CHECKS
  # ============================================
  post-deploy-checks:
    name: ✅ Post-Deployment Validation
    runs-on: ubuntu-latest
    needs: [deploy-preview, deploy-production]
    if: always() && (needs.deploy-preview.result == 'success' || needs.deploy-production.result == 'success')
    
    steps:
      - name: 🔍 Health Check
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            URL="https://handy-sales-crm.vercel.app"
          else
            URL="${{ needs.deploy-preview.outputs.url }}"
          fi
          
          echo "Checking health of $URL"
          
          for i in {1..5}; do
            if curl -f -s -o /dev/null -w "%{http_code}" "$URL" | grep -q "200\|301\|302"; then
              echo "✅ Site is up and running!"
              exit 0
            fi
            echo "Attempt $i failed, retrying in 10 seconds..."
            sleep 10
          done
          
          echo "❌ Site health check failed"
          exit 1
          
      - name: 📈 Performance Check (Lighthouse)
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          npm install -g @lhci/cli@0.12.x
          
          cat > lighthouserc.json << EOF
          {
            "ci": {
              "collect": {
                "url": ["${{ needs.deploy-preview.outputs.url }}"],
                "numberOfRuns": 1
              },
              "assert": {
                "preset": "lighthouse:no-pwa",
                "assertions": {
                  "categories:performance": ["warn", {"minScore": 0.5}],
                  "categories:accessibility": ["warn", {"minScore": 0.8}],
                  "categories:best-practices": ["warn", {"minScore": 0.8}],
                  "categories:seo": ["warn", {"minScore": 0.8}]
                }
              }
            }
          }
          EOF
          
          lhci autorun || echo "Lighthouse check completed with warnings"

  # ============================================
  # 6️⃣ NOTIFICATION
  # ============================================
  notify-status:
    name: 📢 Notify Status
    runs-on: ubuntu-latest
    needs: [quality-check, build-test, deploy-preview, deploy-production, post-deploy-checks]
    if: always()
    
    steps:
      - name: 📊 Summary
        run: |
          echo "## 📊 Pipeline Summary"
          echo ""
          echo "| Job | Status |"
          echo "|-----|--------|"
          echo "| Quality Check | ${{ needs.quality-check.result }} |"
          echo "| Build & Test | ${{ needs.build-test.result }} |"
          echo "| Preview Deploy | ${{ needs.deploy-preview.result || 'skipped' }} |"
          echo "| Production Deploy | ${{ needs.deploy-production.result || 'skipped' }} |"
          echo "| Post-Deploy Checks | ${{ needs.post-deploy-checks.result || 'skipped' }} |"
          echo ""
          
          if [ "${{ needs.deploy-production.result }}" == "success" ]; then
            echo "🎉 **Production deployment successful!**"
            echo "🔗 Live at: https://handy-sales-crm.vercel.app"
          elif [ "${{ needs.deploy-preview.result }}" == "success" ]; then
            echo "🔮 **Preview deployment successful!**"
          fi
